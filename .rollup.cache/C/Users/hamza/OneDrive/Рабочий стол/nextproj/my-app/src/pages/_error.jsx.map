{"version":3,"file":"_error.jsx","sourceRoot":"","sources":["_error.tsx"],"names":[],"mappings":"AAAA,aAAa;AAQX,MAAM,KAAK,GAAG,CAAC,EAAE,UAAU,EAAc,EAAE,EAAE;IAC3C,OAAO,CACL,CAAC,GAAG,CACF;QAAA,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,CAC1B;QAAA,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC,CAC7B;MAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEJ,KAAK,CAAC,eAAe,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAmB,EAAc,EAAE;IAClE,MAAM,UAAU,GAAG,GAAG,EAAE,UAAU,IAAI,GAAG,EAAE,UAAU,IAAI,GAAG,CAAC;IAC7D,OAAO,EAAE,UAAU,EAAE,CAAC;AACxB,CAAC,CAAC;AACJ,eAAe,KAAK,CAAC","sourcesContent":["// _error.tsx\r\n\r\nimport { NextPageContext } from 'next';\r\n\r\ninterface ErrorProps {\r\n    statusCode: number;\r\n  }\r\n\r\n  const Error = ({ statusCode }: ErrorProps) => {\r\n    return (\r\n      <div>\r\n        <h1>Error {statusCode}</h1>\r\n        <p>Something went wrong!</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\nError.getInitialProps = ({ res, err }: NextPageContext): ErrorProps => {\r\n    const statusCode = res?.statusCode ?? err?.statusCode ?? 404;\r\n    return { statusCode };\r\n  };\r\nexport default Error;\r\n"]}