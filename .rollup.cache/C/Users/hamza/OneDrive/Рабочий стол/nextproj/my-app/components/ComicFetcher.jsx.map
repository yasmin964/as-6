{"version":3,"file":"ComicFetcher.jsx","sourceRoot":"","sources":["ComicFetcher.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Image from 'next/image';\nimport styles from '@styles/global.module.css';\n\ninterface ComicData {\n  safe_title: string;\n  img: string;\n  alt: string;\n  year: string;\n  month: string;\n  day: string;\n}\n\n\nconst ComicFetcher: React.FC= () => {\n  const [email, setEmail] = useState('');\n  const [comicTitle, setComicTitle] = useState('');\n  const [comicImgSrc, setComicImgSrc] = useState('');\n  const [comicImgAlt, setComicImgAlt] = useState('');\n  const [comicDate, setComicDate] = useState('');\n  const [showComic, setShowComic] = useState(false);\n\n  const fetchComicID = async (email: string): Promise<number> => {\n    const params = new URLSearchParams({ email });\n    console.log('Fetching comic ID with email:', email);\n    const response = await fetch(`https://fwd.innopolis.university/api/hw2?${params.toString()}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch comic ID');\n    }\n    return response.json();\n  };\n\n  const fetchComic = async (comicID: number): Promise<ComicData> => {\n    console.log('Fetching comic with ID:', comicID);\n    const response = await fetch(`https://fwd.innopolis.university/api/comic?id=${comicID}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch comic');\n    }\n    return response.json();\n  };\n\n  const handleGetComic = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const comicID = await fetchComicID(email);\n      console.log('Comic ID received:', comicID);\n      const comicData = await fetchComic(comicID);\n\n      setComicTitle(comicData.safe_title);\n      setComicImgSrc(comicData.img);\n      setComicImgAlt(comicData.alt);\n      const dateString = `${comicData.year}-${comicData.month}-${comicData.day}`;\n      const date = new Date(dateString);\n      setComicDate(date.toLocaleDateString());\n      setShowComic(true);\n    } catch (error) {\n      console.error('Failed to fetch comic:', error);\n      setComicTitle('Error loading comic');\n      setComicImgSrc('');\n      setComicImgAlt('');\n      setComicDate('');\n      setShowComic(true);\n    }\n  };\n\n  return (\n    <div className={styles.comic}>\n      <div className={styles.comic__head}>\n        <div className={styles.comic__name}>\n          <h1>XKCD Comic Fetcher</h1>\n        </div>\n        <div className={styles.comic__placeholders}>\n          <form id=\"email-form\" onSubmit={handleGetComic}>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </form>\n          <div className={styles.comic__button}>\n            <button id=\"get-comic-btn\" onClick={handleGetComic}>Get a random comic</button>\n          </div>\n        </div>\n      </div>\n      {showComic && (\n        <div id=\"comic-container\">\n          <h2 id=\"safe_title\">{comicTitle}</h2>\n          <Image id=\"comic-img\" src={comicImgSrc} alt={comicImgAlt} />\n          <p id=\"comic-date\">{comicDate}</p>\n        </div>\n      )}\n      <div className={styles.top__content}>\n        <div className={styles.content_container}>\n          <div className={styles.subtitle1}>\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComicFetcher;\n"]}